import "net/sf/orc2hdl/templates/XLIM_sw_actor.stg"

///////////////////////////////////////////////////////////////////////////////
// Override XLIM Templates For XLIM Hardware Generation

localInitialize(local) ::= <<
>>

typeDefLocal(local) ::= <<
>>

// Input and output pattern
patternPortPinAvail(dir, port)::= <<
\<!--  <dir>putPattern --\>
\<operation kind="noop"\>
	\<port dir="in" source="<port.name>_pinStatus"/\>
	\<port dir="out" size="1" source="<dir>putPattern_<instance.id>_<action.name>_<port.name>" typeName="bool"/\>
\</operation\>
>>


declarePinAvailableVariable(port) ::= <<
\<operation kind="pinStatus" portName="<port.name>"\>
  \<port dir="out" source="<port.name>_pinStatus" typeName="bool"/\>
\</operation\>
>>

// For the switch structure of Openforge BE

printTransitions(actions, transitionsList) ::= <<
\<!-- All transitions --\>
\<module kind="block" mutex="true"\>
	<transitionsList:{transitions | <printTransition(transitions)>}; separator="\n">
\</module\>
>>

closeHwTransition() ::=<<
\</module\>\</module\>
>>

//Adding FPGA Config typr for OpenForge BE


fpgaType() ::=<<
\<config_option id="<instance.id>_fpgaType" name="project.xflow.xilinx_part" value="<options.fpgaType>"/\>
>>

// Adding the fpgaType ST to the design
design(instance) ::= <<
\<!-- /<first(instance.hierarchicalClass)>/<printHierarchicalPath(instance.hierarchicalId)> --\>
\<!-- Source file is "<instance.actor.file>" --\>
\<design name="<instance.id>"\>
	<actorPorts()>
	<parameters(instance.parameters)>
	<stateVars()>
	<instance.actor.actions: typeDef()>
	<instance.actor.actions: action(); separator="\n">
	<fpgaType()>
	<if(instance.actor.fsm)>
	<schedulerFSM(actions=instance.actor.actionsOutsideFsm, fsm=instance.actor.fsm)>
	<else>
	<scheduler(actions=instance.actor.actionsOutsideFsm)>
	<endif>
\</design\>
>>

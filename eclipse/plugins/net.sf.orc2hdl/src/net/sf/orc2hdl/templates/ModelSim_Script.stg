printInstance(instance, options) ::= <<
# Generated for <instance.simpleName>
set Lib "../lib/simulation"
set Rtl "../rtl"
set Testbench "vhd"


<if(options.xilinxPrimitives)>
## Create the xilinxPrimitives Library
vlib xilinxPrimitives
vlog -work xilinxPrimitives ../lib/xilinxPrimitives/*.v
<endif>

## Create SystemBuilder Library
vlib SystemBuilder

## Compile the SystemBuilder Library from sources
vcom -reportprogress 300 -work SystemBuilder ../lib/systemBuilder/vhdl/sbtypes.vhdl
vcom -reportprogress 300 -work SystemBuilder ../lib/systemBuilder/vhdl/sbfifo.vhdl
vcom -reportprogress 300 -work SystemBuilder ../lib/systemBuilder/vhdl/sbfifo_behavioral.vhdl

## Map the SystemBuilder Library
vmap SystemBuilder SystemBuilder

# Create a work library for the instance
vlib work_<instance.simpleName>

# Compile the glbl constans given by Xilinx 
vlog -work work_<instance.simpleName> $Lib/glbl.v

# Compile sim package
vcom -93 -reportprogress 30 -work work_<instance.simpleName> $Lib/sim_package.vhd

# Compile the instance
vlog -reportprogress 300 -work work_<instance.simpleName> $Rtl/<instance.simpleName>.v

# Compile the actors testbench
vcom -93 -reportprogress 30 -work work_<instance.simpleName> $Testbench/<instance.simpleName>_tb.vhd

# Start the simulation
<if(options.xilinxPrimitives)>
vsim -L xilinxPrimitives -t ns work_<instance.simpleName>.glbl work_<instance.simpleName>.<instance.simpleName>_tb
<else>
vsim -L unisims_ver -L simprims_ver -t ns work_<instance.simpleName>.glbl work_<instance.simpleName>.<instance.simpleName>_tb
<endif>
radix -decimal

# Add signals to the wave
add wave sim:/<instance.simpleName>_tb/*

# Run for 10us
run 10us
>>


printNetwork(network, options) ::= <<
# Generated for <network.simpleName>
set Lib "../lib/simulation"
set Rtl "../rtl"
set Testbench "vhd"

<if(options.xilinxPrimitives)>
## Create the xilinxPrimitives Library
vlib xilinxPrimitives
vlog -work xilinxPrimitives ../lib/xilinxPrimitives/*.v
<endif>

## Create SystemBuilder Library
vlib SystemBuilder

## Compile the SystemBuilder Library from sources
vcom -reportprogress 300 -work SystemBuilder ../lib/systemBuilder/vhdl/sbtypes.vhdl
vcom -reportprogress 300 -work SystemBuilder ../lib/systemBuilder/vhdl/sbfifo.vhdl
vcom -reportprogress 300 -work SystemBuilder ../lib/systemBuilder/vhdl/sbfifo_behavioral.vhdl

## Map the SystemBuilder Library
vmap SystemBuilder SystemBuilder

# Create a work library for the instance
vlib work_<network.simpleName>

# Compile the glbl constans given by Xilinx 
vlog -work work_<network.simpleName> $Lib/glbl.v

# Compile sim package
vcom -93 -reportprogress 30 -work work_<network.simpleName> $Lib/sim_package.vhd

# Compile the instance
vlog -reportprogress 300 -work work_<network.simpleName> $Rtl/*.v

# Compile the Top Network
vcom -93 -check_synthesis -quiet -work work_<network.simpleName> $Rtl/<network.simpleName>.vhd

# Compile the actors testbench
vcom -93 -reportprogress 30 -work work_<network.simpleName> $Testbench/<network.simpleName>_tb.vhd

# Start the simulation
<if(options.xilinxPrimitives)>
vsim -L xilinxPrimitives -t ns work_<network.simpleName>.glbl work_<network.simpleName>.<network.simpleName>_tb
<else>
vsim -L unisims_ver -L simprims_ver -t ns work_<network.simpleName>.glbl work_<network.simpleName>.<network.simpleName>_tb
<endif>
radix -decimal

# Add signals to the wave
add wave sim:/<network.simpleName>_tb/*

>>
